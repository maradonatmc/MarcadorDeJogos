@model MarcadorDeJogos.Models.ViewModels.JogadoresFormViewModel
@{
    ViewData["Title"] = "Editar";
}

<h2>@ViewData["Title"]</h2>

<h4>Jogadores</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <globalization culture="en-us" />
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Jogadores.Id" class="control-label"></label>
                <input asp-for="Jogadores.Id" class="form-control" readonly="readonly" />
                <span asp-validation-for="Jogadores.Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Jogadores.Nome" class="control-label"></label>
                <input asp-for="Jogadores.Nome" class="form-control" />
                <span asp-validation-for="Jogadores.Nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Jogadores.DatCadastro" class="control-label"></label>
                <input asp-for="Jogadores.DatCadastro" class="form-control" />
                <span asp-validation-for="Jogadores.DatCadastro" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Salvar" class="btn btn-success" />
                <a asp-action="Index" asp-controller="Home" class="btn btn-warning" onclick="return confirm('Deseja continuar?')">Cancelar</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


